routes:
  -
    id: route_to_portal
    uri: /*
    "vars": [
        ["server_port", "==", "${{CP_GATEWAY_PORTAL_PORT}}"]   
    ]
    upstream_id: upstream_portal
  -
    id: route_to_admin_portal
    uri: /*
    "vars": [
        ["server_port", "==", "${{CP_GATEWAY_ADMIN_PORTAL_PORT}}"]   
    ]
    upstream_id: upstream_admin_portal
  -
    id: route_to_server_for_options
    uri: /*
    "vars": [
        ["server_port", "==", "${{CP_GATEWAY_SERVER_PORT}}"],
        ["request_method", "==", "OPTIONS"]
    ]
    upstream_id: upstream_server
  -
    id: route_to_server
    uri: /*
    "vars": [
        ["server_port", "==", "${{CP_GATEWAY_SERVER_PORT}}"]   
        ["request_method", "!=", "OPTIONS"]
    ]
    plugins: 
      getroleforcp: {}
      openid-connect: 
        client_id: mainappclt
        client_secret: Mgb4X/5RaqAojphemSxN+NLOoSm/+lMLzcHEFmlbrU4
        discovery: http://host.docker.internal:7119/realms/mainapprlm/.well-known/openid-configuration
        scope: openid profile
        bearer_only: true
        realm: mainapprlm
        redirect_uri: http://host.docker.internal:7117/
        logout_path: /logout
      opa:
        host: "http://host.docker.internal:7126"
        policy: apisixauthz
        with_service: true
        with_consumer: true
        send_headers_upstream: 
          - "authorization" 
        input: 
          cprole: cprole 
    upstream_id: upstream_server

upstreams:
  # Upstream for portal
  - id: upstream_portal
    nodes:
      - host: "${{CP_PORTAL_HOST}}"
        port: "${{CP_PORTAL_PORT}}"
        weight: 1
    type: roundrobin
  - id: upstream_admin_portal
    nodes:
      - host: "${{CP_ADMIN_PORTAL_HOST}}"
        port: "${{CP_ADMIN_PORTAL_PORT}}"
        weight: 1
    type: roundrobin
  - id: upstream_server
    nodes:
      - host: "${{CP_SERVER_HOST}}"
        port: "${{CP_SERVER_PORT}}"
        weight: 1
    type: roundrobin


#END
